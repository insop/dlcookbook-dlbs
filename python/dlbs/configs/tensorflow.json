{
    "parameters": {
        "tensorflow.launcher": "${DLBS_ROOT}/scripts/launchers/tensorflow_hpm.sh",
        "tensorflow.python_path": "$('${DLBS_ROOT}/python/tf_cnn_benchmarks' if '${exp.env}' == 'host' else '/workspace/tf_cnn_benchmarks')$",
        "tensorflow.env": [
            "PYTHONPATH=${tensorflow.python_path}:\\$PYTHONPATH",
            "$('CUDA_CACHE_PATH=${runtime.cuda_cache}' if '${CUDA_CACHE_PATH}' else '')$",
            "CUDA_VISIBLE_DEVICES=${exp.gpus}"
        ],
        "tensorflow.var_update": "replicated",    
        "tensorflow.use_nccl": "true",    
        "tensorflow.local_parameter_device": "cpu",
        "tensorflow.data_dir": "",
        "tensorflow.data_name": "",
        "tensorflow.distortions": "false",
        "tensorflow.num_intra_threads": 0,
        "tensorflow.resize_method": "bilinear",
        "tensorflow.args": [
            "--model=${exp.model}",
            "--eval=false",
            "--forward_only=$('true' if '${exp.phase}'=='inference' else 'false')$",
            "--batch_size=${exp.device_batch}",
            "--num_batches=${exp.bench_iters}",
            "--num_warmup_batches=${exp.warmup_iters}",
            "--num_gpus=$(${exp.num_gpus} if '${exp.device}' == 'gpu' else 1)$",
            "--display_every=1000",
            "--device=${exp.device}",
            "--data_format=$('NCHW' if '${exp.device}' == 'gpu' else 'NHWC')$",
            "--variable_update=${tensorflow.var_update}",
            "$('--use_nccl=${tensorflow.use_nccl}' if '${exp.device}' == 'gpu' else '--use_nccl=false')$",
            "--local_parameter_device=${tensorflow.local_parameter_device}",
            "$('' if not '${tensorflow.data_dir}' else '--data_dir=${tensorflow.data_dir}' if '${exp.env}' == 'host' else '--data_dir=/workspace/data')$",
            "$('--data_name=${tensorflow.data_name}' if '${tensorflow.data_name}' else '')$",
            "--distortions=${tensorflow.distortions}",
            "--num_intra_threads=${tensorflow.num_intra_threads}",
            "--resize_method=${tensorflow.resize_method}"
        ],
        "tensorflow.docker.image": "hpe/tensorflow:cuda9-cudnn7",
        "tensorflow.docker.args": [
            "-i",
            "--security-opt seccomp=unconfined",
            "--pid=host",
            "--volume=${DLBS_ROOT}/python/tf_cnn_benchmarks:/workspace/tf_cnn_benchmarks",
            "$('--volume=${CUDA_CACHE_PATH}:/workspace/cuda_cache' if '${CUDA_CACHE_PATH}' else '')$",
            "$('--volume=${tensorflow.data_dir}:/workspace/data' if '${tensorflow.data_dir}' else '')$",
            "$('--volume=${resource_monitor.pid_file_folder}:/workspace/tmp' if '${resource_monitor.enabled}' == 'true' else '')$",
            "${exp.docker.args}",
            "${tensorflow.docker.image}"
        ],
        "tensorflow.host.libpath": ""
    },
    "extensions": [
        {
            "condition":{ "exp.framework": "tensorflow", "exp.env": "host" },
            "parameters": { "tensorflow.env": [
                "PYTHONPATH=${tensorflow.python_path}:\\$PYTHONPATH",
                "$('CUDA_CACHE_PATH=${runtime.cuda_cache}' if '${CUDA_CACHE_PATH}' else '')$",
                "$('CUDA_CACHE_DISABLE=0' if '${CUDA_CACHE_PATH}' else '')$",
                "$('CUDA_CACHE_MAXSIZE=2147483648' if '${CUDA_CACHE_PATH}' else '')$",
                "CUDA_VISIBLE_DEVICES=${exp.gpus}",
                "LD_LIBRARY_PATH=$('${tensorflow.host.libpath}:\\$LD_LIBRARY_PATH'.strip(' \t:'))$"
            ]}
        }
    ]
}