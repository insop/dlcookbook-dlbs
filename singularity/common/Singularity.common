Bootstrap: docker
FROM: docker://nvidia/cuda:9.2-cudnn7-devel-ubuntu16.04
%labels
    Maintainer Stephen Fleischman
    Common packages
    Build  CUDA 9.0 cuDNN 7.1 x86_64 OFED IB.

%setup
    export COMMON=/lvol/sfleisch/dlbs/singularity/common
    cp ${COMMON}/MLNX_OFED_LINUX-4.2-1.2.0.0-ubuntu16.04-x86_64.tgz  $SINGULARITY_ROOTFS
    cp ${COMMON}/hpcx-v2.0.0-gcc-MLNX_OFED_LINUX-4.2-1.0.0.0-ubuntu16.04-x86_64.tbz  $SINGULARITY_ROOTFS
    cp ${COMMON}/jupyter_notebook_config.py  $SINGULARITY_ROOTFS
    cp ${COMMON}/nccl_2.2.13-1+cuda9.2_x86_64.txz  $SINGULARITY_ROOTFS


%help
    NVidia GPU Singularity Container with Common Packages
    Maintainer: Stephen Fleischman

%environment
    export CUDA_DIR=/usr/local/cuda
    export HPCX_DIR=/opt/hpcx-v2.0.0-gcc-MLNX_OFED_LINUX-4.2-1.0.0.0-ubuntu16.04-x86_64
    export HPCX_MPI_DIR=${HPCX_DIR}/ompi-v3.0.x
    export HPCX_IPM_DIR=${HPCX_MPI_DIR}/tests/ipm-2.0.6
#    # No version specific specifications below this line.
    export HPCX_IPM_LIB=${HPCX_IPM_DIR}/lib/libipm.so
    export HPCX_BUPC_DIR=${HPCX_DIR}/bupc
    export HPCX_IBPROF_LIB=${HPCX_DIR}/ibprof/lib/libibprof.so
    export HPCX_SHARP_DIR=${HPCX_DIR}/sharp
    export HPCX_HCOLL_DIR=${HPCX_DIR}/hcoll
    export HPCX_MXM_DIR=${HPCX_DIR}/mxm
    export HPCX_UCX_DIR=${HPCX_DIR}/ucx
    export HPCX_IBPROF_DIR=${HPCX_DIR}/ibprof
    export HPCX_FCA_DIR=${HPCX_DIR}/fca
    export HPCX_OSHMEM_DIR=${HPCX_MPI_DIR}
    export HPCX_MPI_TESTS_DIR=${HPCX_OSHMEM_DIR}/tests
    export SHMEM_HOME=${HPCX_MPI_DIR}
    export OPAL_PREFIX=${HPCX_MPI_DIR}
    export OMPI_HOME=${HPCX_MPI_DIR}
    export MPI_HOME=${HPCX_MPI_DIR}
    export OSHMEM_HOME=${HPCX_MPI_DIR}
    export LD_LIBRARY_PATH=${HPCX_DIR}/mxm/lib:${HPCX_UCX_DIR}/lib:${HPCX_SHARP_DIR}/lib:${HPCX_HCOLL_DIR}/lib:${HPCX_MPI_DIR}/lib
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${CUDA_DIR}/lib64:${CUDA_DIR}/extras/CUPTI/lib64
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/.singularity.d/libs:/usr/lib/x86_64-linux-gnu
    export PATH=${HPCX_DIR}/bupc/bin:${HPCX_DIR}/hcoll/bin:${HPCX_DIR}/ucx/bin:${HPCX_DIR}/mxm/bin
    export PATH=${PATH}:${HPCX_MPI_DIR}/bin:${CUDA_DIR}/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
    export CPATH=${HPCX_MPI_DIR}/include:${HPCX_UCX_DIR}/include:${HPCX_SHARP_DIR}/include:${HPCX_MXM_DIR}/include:${HPCX_HCOLL_DIR}/include
    export JUPYTER_CONFIG_DIR=/.jupyter

%post

    ln -sf /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1
    export LD_LIBRARY_PATH=/host-libs:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs
    export PATH=/usr/local/cuda/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
    export MOFED_DIR=/MLNX_OFED_LINUX-4.2-1.2.0.0-ubuntu16.04-x86_64
    export MOFED_SITE_PLACE=MLNX_OFED-4.2-1.2.0.0
    export MOFED_IMAGE=/MLNX_OFED_LINUX-4.2-1.2.0.0-ubuntu16.04-x86_64.tgz
    export HPCX_TBZ=/hpcx-v2.0.0-gcc-MLNX_OFED_LINUX-4.2-1.0.0.0-ubuntu16.04-x86_64.tbz

    # Set up our notebook config.
    mkdir -p /.jupyter && mv /jupyter_notebook_config.py /.jupyter && chmod 777 /.jupyter && echo $(ls /.jupyter)

    apt-get update 
    apt-get install -y --no-install-recommends \
            build-essential \
            bzip2 \
            ca-certificates \
            cmake \
            curl \
            environment-modules \
            gdb \
            git \
            hwloc \
            iputils-ping \
            libcurl3-dev \
            libfreetype6-dev \
            libgflags-dev \
            libgoogle-glog-dev \
            libgtest-dev \
            libhiredis-dev \
            libhwloc-common \
            libhwloc-dev \
            libhwloc-plugins \
            libibverbs-dev \
            libiomp-dev \
            libjemalloc-dev \
            liblapack-dev \
            libleveldb-dev \
            liblmdb-dev \
            libopenblas-dev \
            libopencv-dev \
            libpng12-dev \
            libprotobuf-dev \
            libsnappy-dev \
            libtool \
            libzmq3-dev \
            lsof \
            nasm \
            net-tools \
            numactl \
            openjdk-8-jdk \
            openjdk-8-jre-headless \
            openssh-server \
            pkg-config \
            protobuf-compiler \
            pylint \
            python3 \
            python3-dev \
            python3-pip \
            rcs \
            redis-tools \
            rsync \
            software-properties-common \
            tar \
            unzip \
            vim \
            wget \
            zip \
            zlib1g-dev
    apt-get clean
    rm -rf /var/lib/apt/lists/*

    ln -sf /usr/bin/python3 /usr/bin/python
    python3 -m pip install --upgrade pip
    python3 -m pip install --no-cache-dir setuptools wheel
    python3 -m pip install --no-cache-dir \
        flask \
        future \
        graphviz \
        hypothesis \
        jupyter \
        lmdb \
        matplotlib \
        numpy \
        protobuf \
        pandas \
        pydot \
        pyyaml \
        redis \
        requests \
        scipy \
        scikit-image \
        scikit-learn \
        matplotlib \
        ipython \
        jupyter \
        pandas \
        sympy \
        nose \
        six \
        tornado \
        typing
    python3 -m pip install --no-cache-dir Pillow

    sed -i -e "s/alias ls=/#alias ls=/" /root/.bashrc
    echo $'syntax off\nset ts=4\nset nohlsearch' > /root/.vimrc

    ########## Mellanox OFED INSTALLATION STEPS ###################
    tar -xzvf ${MOFED_IMAGE}
    ${MOFED_DIR}/mlnxofedinstall --user-space-only --without-fw-update --all -q && cd /
    rm -rf ${MOFED_DIR} ${MOFED_IMAGE}
    # Install Mellanox HPCX SDK
    cd /opt &&  tar xjf ${HPCX_TBZ} && rm -f ${HPCX_TBZ}

    ## Put NCCL in one place
    cd /usr/local && tar xvf /nccl_2.2.13-1+cuda9.2_x86_64.txz && rm /nccl_2.2.13-1+cuda9.2_x86_64.txz

    ldconfig

%runscript
    echo "Singularity Container: Ubuntu 16.04, Mellanox IB, OpenMPI, CUDA 9.0, cuDNN 7, python 3.5, common Ubuntu and Python packages.
    echo "The image contains: Jupyter

