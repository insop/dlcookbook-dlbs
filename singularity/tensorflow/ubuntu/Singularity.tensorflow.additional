Bootstrap: localimage
FROM: tensorflow-!{TF_VERSION}-!{CUDA_VERSION}-!{CUDNN_VERSION}-base.img

%labels
	Maintainer Stephen Fleischman
    Framework TensorFlow
    Version  !{TF_VERSION}
    Build  CUDA !{CUDA_VERSION} cuDNN !{CUDNN_VERSION} x86_64 AVX2 (Broadwell), OFED IB.
    Installed Horovod, OpenNMT and Tensor2Tensor

%help
    TensorFlow !{TF_VERSION} GPU Singularity Container
    Maintainer: Stephen Fleischman

%post
    # Update when versions change
    export PATH=/opt/anaconda3/bin:/usr/local/cuda-!{CUDA_VERSION}/bin:$PATH

    # Standalone Keras
    python -m pip install --no-cache-dir keras
    # Yet another wrapper around TF 
    pip install --no-cache-dir --upgrade tensorlayer
    pip install --no-cache-dir --upgrade tensorlayer[all]

    # TensorFlow Hub
    python -m pip install --no-cache-dir tensorflow_hub
    python -m pip install --no-cache-dir tensornets

    # Install OpenNMT-tf for machine translation
    cd /opt
    tarball_url=`wget -qO- https://api.github.com/repos/OpenNMT/OpenNMT-tf/releases/latest |grep '"tarball_url"'|awk '{print $2}'|sed -e "s/,$//" -e 's/"//g'`
    wget $tarball_url -O opennmt.tgz
    tar xvzf opennmt.tgz
    mv OpenNMT* OpenNMT
    cd OpenNMT
    python setup.py install
    rm /opt/opennmt.tgz

    # tensor2tensor
    pip install tensor2tensor

    ldconfig -v

%runscript
    echo "Singularity Container: TensorFlow !{TF_VERSION}, Ubuntu !{UBUNTU_VERSION}, CUDA !{CUDA_VERSION}, cuDNN !{CUDNN_VERSION}, Anaconda Python !{PYTHON_VERSION}, AVX2 instructions."
    echo "The image contains: Jupyter, Horovod, OpenNMT for TensorFlow, Tensor2Tensor, GeoSpatial Python packages."
